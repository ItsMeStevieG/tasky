<!DOCTYPE html>
<html lang="en" data-theme="{{ theme }}">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Tasky{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    {% include 'partials/headscripts.twig' %}
    {% block headscripts %}{% endblock %}
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="index.php?nav=dashboard">Tasky</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    {% if auth.isLoggedIn %}
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=dashboard">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=projects">Projects</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=tags">Tags</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=reports">Reports</a>
                    </li>
                    {% if auth.isAdmin %}
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=users">Users</a>
                    </li>
                    {% endif %}
                    {% endif %}
                </ul>
                <ul class="navbar-nav align-items-center">
                    <li class="nav-item">
                        <button id="themeToggle" class="btn btn-outline-secondary me-2" style="height: 30px; width: 30px; padding: 0; display: flex; align-items: center; justify-content: center;">
                            <i id="themeIcon" class="bi bi-sun-fill" style="font-size: 1rem;"></i>
                        </button>
                    </li>
                    {% if auth.isLoggedIn %}
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=profile">
                            {% if auth.getProfilePicture %}
                            <img src="{{ auth.getProfilePicture }}" alt="Profile Picture" class="rounded-circle me-2" style="width: 30px; height: 30px; object-fit: cover;">
                            {% endif %}
                            {{ full_name }}
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="index.php?nav=logout">
                            <i class="bi bi-box-arrow-right me-1"></i> Logout
                        </a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </nav>
    <div class="container mt-5">
        {% if error %}
        <div class="alert alert-danger">{{ error }}</div>
        {% endif %}
        {% block content %}{% endblock %}
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    {% block footscripts %}
    <script>
        // Cropper.js logic (only on profile page)
        if (document.getElementById('profile_picture')) {
            const imageInput = document.getElementById('profile_picture');
            const imageToCrop = document.getElementById('imageToCrop');
            const cropButton = document.getElementById('cropButton');
            const croppedImageInput = document.getElementById('croppedImage');
            let cropper;

            imageInput.addEventListener('change', (e) => {
                const files = e.target.files;
                if (files && files.length > 0) {
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        imageToCrop.src = event.target.result;
                        const modal = new bootstrap.Modal(document.getElementById('cropModal'));
                        modal.show();

                        // Initialize Cropper.js
                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(imageToCrop, {
                            aspectRatio: 1,
                            viewMode: 1,
                            autoCropArea: 0.8,
                            responsive: true,
                            zoomable: true,
                            scalable: true,
                            movable: true,
                        });
                    };
                    reader.readAsDataURL(files[0]);
                }
            });

            cropButton.addEventListener('click', () => {
                if (cropper) {
                    const canvas = cropper.getCroppedCanvas({
                        width: 200,
                        height: 200,
                    });
                    canvas.toBlob((blob) => {
                        const reader = new FileReader();
                        reader.onloadend = () => {
                            croppedImageInput.value = reader.result;
                            const modal = bootstrap.Modal.getInstance(document.getElementById('cropModal'));
                            modal.hide();
                            // Reset the file input to allow re-uploading
                            imageInput.value = '';
                        };
                        reader.readAsDataURL(blob);
                    }, 'image/jpeg');
                }
            });

            // Clean up Cropper.js when modal is closed
            document.getElementById('cropModal').addEventListener('hidden.bs.modal', () => {
                if (cropper) {
                    cropper.destroy();
                    cropper = null;
                }
                imageToCrop.src = '';
            });
        }
    </script>
    {% endblock %}
</body>

</html>